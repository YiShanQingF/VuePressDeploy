(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{430:function(t,e,r){"use strict";r.r(e);var a=r(8),o=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"docker-镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像"}},[t._v("#")]),t._v(" Docker 镜像")]),t._v(" "),e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),e("blockquote",[e("p",[t._v("Develop faster. Run anywhere.")])]),t._v(" "),e("p",[t._v("Docker 是基于"),e("code",[t._v("Go")]),t._v("语言实现的云开源项目。Docker 的主要目标是"),e("code",[t._v("Develop faster. Run anywhere.")]),t._v("，通过对应用组件的封装、分发、部署、运行等生命周期的管理，使用户的APP（可以是一个WEB应用或数据库应用等等）及其运行环境能够做到“一次镜像，处处运行”。\nDocker 在 Linux 容器技术的基础上发展过来。将应用打成镜像，通过镜像成为运行在Docker容器上面的实例，Docker 容器在任何操作系统上都是一致的，这就实现了跨平台、跨服务器。只需要一次配置好环境，换到别的机子上就可以一键部署好，大大简化了操作。")]),t._v(" "),e("h2",{attrs:{id:"容器与虚拟机比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器与虚拟机比较"}},[t._v("#")]),t._v(" 容器与虚拟机比较")]),t._v(" "),e("h3",{attrs:{id:"虚拟机-virtual-machine"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机-virtual-machine"}},[t._v("#")]),t._v(" 虚拟机（virtual machine）")]),t._v(" "),e("p",[t._v("虚拟机（virtual machine）就是带环境安装的一种解决方案。")]),t._v(" "),e("p",[t._v("它可以在一种操作系统里面运行另一种操作系统，比如在Windows10系统里面运行Linux系统CentOS7。应用程序对此毫无感知，因为虚拟机看上去跟真实系统一模一样，而对于底层系统来说，虚拟机就是一个普通文件，不需要了就删掉，对其他部分毫无影响。这类虚拟机完美的运行了另一套系统，能够使应用程序，操作系统和硬件三者之间的逻辑不变。")]),t._v(" "),e("p",[t._v("虚拟机的缺点：")]),t._v(" "),e("ul",[e("li",[t._v("资源占用多")]),t._v(" "),e("li",[t._v("冗余步骤多")]),t._v(" "),e("li",[t._v("启动慢")])]),t._v(" "),e("h3",{attrs:{id:"容器虚拟化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器虚拟化"}},[t._v("#")]),t._v(" 容器虚拟化")]),t._v(" "),e("p",[e("strong",[t._v("Linux 容器不是模拟一个完整的操作系统")]),t._v("而是对进程进行隔离。有了容器，就可以将软件运行所需的所有资源打包到一个隔离的容器中。"),e("strong",[t._v("容器与虚拟机不同，不需要捆绑一整套操作系统")]),t._v("，只需要软件工作所需的库资源和设置。系统因此而变得高效轻量并保证部署在任何环境中的软件都能始终如一地运行。")]),t._v(" "),e("p",[t._v("Docker 容器是在操作系统层面上实现虚拟化，直接复用本地主机的操作系统，而传统虚拟机则是在硬件层面实现虚拟化。与传统的虚拟机相比，"),e("strong",[t._v("Docker 优势体现为启动速度快、占用体积小")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"相关网站"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关网站"}},[t._v("#")]),t._v(" 相关网站")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网：https://www.docker.com/"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://docs.docker.com/engine/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装文档：https://docs.docker.com/engine/install/"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Hub：https://hub.docker.com/"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://help.aliyun.com/document_detail/60750.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阿里镜像加速：https://help.aliyun.com/document_detail/60750.html"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=o.exports}}]);