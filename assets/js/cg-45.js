(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{426:function(t,s,a){"use strict";a.r(s);var e=a(8),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"docker-常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-常用命令"}},[t._v("#")]),t._v(" Docker 常用命令")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/cli/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方命令指南：https://docs.docker.com/engine/reference/commandline/cli/"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"容器周期管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器周期管理"}},[t._v("#")]),t._v(" 容器周期管理")]),t._v(" "),s("h3",{attrs:{id:"run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[t._v("#")]),t._v(" run")]),t._v(" "),s("p",[s("code",[t._v("docker run")]),t._v(" : 从镜像创建并运行新容器")]),t._v(" "),s("blockquote",[s("p",[t._v("docker run [OPTIONS] IMAGE [COMMAND] [ARG...]")])]),t._v(" "),s("p",[s("strong",[t._v("OPTIONS 说明：")])]),t._v(" "),s("ul",[s("li",[t._v("-i: 以交互模式运行容器，通常与 -t 同时使用；")]),t._v(" "),s("li",[t._v("-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；")]),t._v(" "),s("li",[t._v("-d: 后台运行容器，并返回容器 ID；")]),t._v(" "),s("li",[t._v("-P: 随机端口映射；")]),t._v(" "),s("li",[t._v("-p: 指定端口映射，格式为：主机 (宿主) 端口：容器端口")]),t._v(" "),s("li",[t._v("-m: 设置容器使用内存最大值；")]),t._v(" "),s("li",[t._v('--name="myNginx": 为容器指定一个名称；')]),t._v(" "),s("li",[t._v('-h "mars": 指定容器的 hostname；')]),t._v(" "),s("li",[t._v("--env-file=[]: 从指定文件读入环境变量；")]),t._v(" "),s("li",[t._v('--cpuset="0-2" or --cpuset="0,1,2": 绑定容器到指定 CPU 运行；')]),t._v(" "),s("li",[t._v('--net="bridge": 指定容器的网络连接类型，支持 bridge/host/none/container: 四种类型；')]),t._v(" "),s("li",[t._v("--link=[]: 添加链接到另一个容器")]),t._v(" "),s("li",[t._v("--expose=[]: 开放一个端口或一组端口；")]),t._v(" "),s("li",[t._v("--volume , -v 绑定一个卷")]),t._v(" "),s("li",[t._v("--dns 8.8.8.8: 指定容器使用的 DNS 服务器，默认和宿主一致；")])]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用镜像 nginx，以后台模式启动一个容器，将容器的 80 端口映射到主机的 80 端口，主机的目录 /data 映射到容器的 /data，并将容器命名为 mynginx。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@docker ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker run --name mynginx -p 80:80 -v /data:/data -d nginx")]),t._v("\n7a5bbe7c568010945e22c1f53acfe93e0ff1f3f95af90f9057ebdbe32b8dc3b7\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@docker ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker ps")]),t._v("\nCONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                NAMES\n7a5bbe7c5680   nginx     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/docker-entrypoint.…"')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" seconds ago   Up "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" seconds   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:80-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/tcp   mynginx\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@docker ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ss -antl")]),t._v("\nState       Recv-Q Send-Q       Local Address:Port    Peer Address:Port              \nLISTEN      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v("                      *:80                 *:*                  \nLISTEN      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v("                      *:22                 *:*                  \nLISTEN      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:25                 *:*                  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以交互模式启动nginx")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@docker ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker run -it nginx /bin/bash")]),t._v("\nroot@9f3dbb240a70:/"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   ")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[s("strong",[t._v("交互模式启动")])]),t._v(" "),s("p",[s("code",[t._v("docker run -it nginx /bin/bash")]),t._v("/bin/bash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash。要退出终端，直接输入 exit。")]),t._v(" "),s("h3",{attrs:{id:"create"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create"}},[t._v("#")]),t._v(" create")]),t._v(" "),s("p",[s("code",[t._v("docker create")]),t._v(" : 创建一个新的容器但不启动它 用法同 "),s("code",[t._v("docker run")])]),t._v(" "),s("blockquote",[s("p",[t._v("docker create [OPTIONS] IMAGE [COMMAND] [ARG...]")])]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 nginx 创建一个容器，并将容器命名为 nginx001")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@docker ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker create  --name nginx001  nginx")]),t._v("\n356a21b1efafbdf7644a078c2e71690e8fb813549c0d15cef70e93e9fdeb6644\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@docker ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker ps -a")]),t._v("\nCONTAINER ID   IMAGE     COMMAND                  CREATED              STATUS    PORTS     NAMES\n356a21b1efaf   nginx     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/docker-entrypoint.…"')]),t._v("   About a minute ago   Created             nginx001\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[s("strong",[t._v("docker run和docker start的区别：")]),t._v(" "),s("img",{staticClass:"lazy",attrs:{alt:"","data-src":"/images/devops/docker/run&create%E7%9A%84%E5%8C%BA%E5%88%AB.png",loading:"lazy"}})]),t._v(" "),s("h3",{attrs:{id:"start-stop-restart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start-stop-restart"}},[t._v("#")]),t._v(" start/stop/restart")]),t._v(" "),s("p",[s("code",[t._v("docker start")]),t._v(" : 启动已被停止或创建的容器")]),t._v(" "),s("p",[s("code",[t._v("docker restart")]),t._v(" : 重启容器")]),t._v(" "),s("p",[s("code",[t._v("docker stop")]),t._v(" : 停止运行中的容器")]),t._v(" "),s("blockquote",[s("p",[t._v("docker start [OPTIONS] CONTAINER [CONTAINER...]")]),t._v(" "),s("p",[t._v("docker restart [OPTIONS] CONTAINER [CONTAINER...]")]),t._v(" "),s("p",[t._v("docker stop [OPTIONS] CONTAINER [CONTAINER...]")])]),t._v(" "),s("h3",{attrs:{id:"kill"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kill"}},[t._v("#")]),t._v(" kill")]),t._v(" "),s("p",[s("code",[t._v("docker kill")]),t._v(" : 杀掉一个运行中的容器。")]),t._v(" "),s("blockquote",[s("p",[t._v("docker kill [OPTIONS] CONTAINER [CONTAINER...]")])]),t._v(" "),s("h3",{attrs:{id:"rm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rm"}},[t._v("#")]),t._v(" rm")]),t._v(" "),s("p",[s("code",[t._v("docker rm")]),t._v(" : 删除一个或多个容器。")]),t._v(" "),s("blockquote",[s("p",[t._v("docker rm [OPTIONS] CONTAINER [CONTAINER...]")])]),t._v(" "),s("p",[t._v("rm不能删除正在运行的容器，可以加rm -f 强制删除")]),t._v(" "),s("p",[s("strong",[t._v("OPTIONS 说明:")])]),t._v(" "),s("ul",[s("li",[t._v("-f : 通过 SIGKILL 信号强制删除一个运行中的容器。")]),t._v(" "),s("li",[t._v("-l : 移除容器间的网络连接，而非容器本身。")]),t._v(" "),s("li",[t._v("-v : 删除与容器关联的卷。")])]),t._v(" "),s("h2",{attrs:{id:"容器操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器操作"}},[t._v("#")]),t._v(" 容器操作")]),t._v(" "),s("h3",{attrs:{id:"ps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ps"}},[t._v("#")]),t._v(" ps")]),t._v(" "),s("p",[s("code",[t._v("docker ps")]),t._v(" : 列出容器")]),t._v(" "),s("p",[s("strong",[t._v("OPTIONS 说明:")])]),t._v(" "),s("ul",[s("li",[t._v("-a : 显示所有的容器，包括未运行的。")]),t._v(" "),s("li",[t._v("-f : 根据条件过滤显示的内容。")]),t._v(" "),s("li",[t._v("--format : 指定返回值的模板文件。")]),t._v(" "),s("li",[t._v("-l : 显示最近创建的容器。")]),t._v(" "),s("li",[t._v("-n : 列出最近创建的 n 个容器。")]),t._v(" "),s("li",[t._v("--no-trunc : 不截断输出。")]),t._v(" "),s("li",[t._v("-q : 静默模式，只显示容器编号。")]),t._v(" "),s("li",[t._v("-s : 显示总的文件大小。")])]),t._v(" "),s("h3",{attrs:{id:"exec"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exec"}},[t._v("#")]),t._v(" exec")]),t._v(" "),s("h3",{attrs:{id:"attach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attach"}},[t._v("#")]),t._v(" attach")]),t._v(" "),s("h3",{attrs:{id:"inspect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inspect"}},[t._v("#")]),t._v(" inspect")]),t._v(" "),s("h3",{attrs:{id:"port"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#port"}},[t._v("#")]),t._v(" port")]),t._v(" "),s("h3",{attrs:{id:"logs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logs"}},[t._v("#")]),t._v(" logs")]),t._v(" "),s("h3",{attrs:{id:"top"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#top"}},[t._v("#")]),t._v(" top")]),t._v(" "),s("h3",{attrs:{id:"events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" events")]),t._v(" "),s("h3",{attrs:{id:"wait"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wait"}},[t._v("#")]),t._v(" wait")]),t._v(" "),s("h3",{attrs:{id:"export"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#export"}},[t._v("#")]),t._v(" export")]),t._v(" "),s("h3",{attrs:{id:"import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[t._v("#")]),t._v(" import")]),t._v(" "),s("h2",{attrs:{id:"本地镜像管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地镜像管理"}},[t._v("#")]),t._v(" 本地镜像管理")]),t._v(" "),s("h2",{attrs:{id:"镜像仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像仓库"}},[t._v("#")]),t._v(" 镜像仓库")]),t._v(" "),s("h2",{attrs:{id:"容器-rootfs-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器-rootfs-命令"}},[t._v("#")]),t._v(" 容器 rootfs 命令")]),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/shipment/p/13570643.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker基础用法和命令：https://www.cnblogs.com/shipment/p/13570643.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/ThinkWon/article/details/117638128",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker 从入门到实践系列三 - Docker 常用命令：https://blog.csdn.net/ThinkWon/article/details/117638128"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/kevingrace/p/5715326.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker容器日常操作命令 - 运维笔记：https://www.cnblogs.com/kevingrace/p/5715326.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/koktlzz/p/14105026.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker基础：https://www.cnblogs.com/koktlzz/p/14105026.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.docker.com.zh.xy2401.com/engine/reference/commandline/docker/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker中文文档：https://docs.docker.com.zh.xy2401.com/engine/reference/commandline/docker/"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);